---
export const prerender = false;
import ProductLayout from "@/layouts/ProductLayout.astro";
import ProductsByCategory from "@/components/user/categories/ProductsByCategory.astro";
import { AppBreadCrumb } from "@/components/admin/layouts/AppBreadcrumb";
import { ProductFilter } from "@/components/user/layouts/ProductFilter";

import { actions } from "astro:actions";

const { slug } = Astro.params;

const { data: category } = await Astro.callAction(actions.getCategoryBySlug, {
  slug: slug ?? "",
});

if (!category) {
  return Astro.redirect("/not-found");
}

const url = new URL(Astro.request.url);
const minPrice: any = url.searchParams.get("minPrice")
  ? Number(url.searchParams.get("minPrice"))
  : undefined;
const maxPrice: any = url.searchParams.get("maxPrice")
  ? Number(url.searchParams.get("maxPrice"))
  : undefined;
const sortBy = url.searchParams.get("sortBy");
const sortField = url.searchParams.get("sortField");

const params = {
  categorySlug: slug,
  sortBy: sortBy ?? "",
  sortField: sortField ?? "",
  minPrice,
  maxPrice,
};

const categoryUrl = `/categories/${category?.slug}`;
---

<ProductLayout
  title={category?.name}
  description={""}
  image={""}
  url={categoryUrl}
>
  <AppBreadCrumb
    items={[
      { id: 1, name: "Home", url: "/" },
      {
        id: 3,
        name: category?.name,
      },
    ]}
  />

  <ProductFilter
    sortBy={sortBy ?? ""}
    sortField={sortField ?? ""}
    minPrice={minPrice}
    maxPrice={maxPrice}
    client:idle
  />

  <ProductsByCategory server:defer params={params} />
</ProductLayout>
