---
export const prerender = false;
import { actions } from "astro:actions";
import { AppBreadCrumb } from "@/components/admin/layouts/AppBreadcrumb";
import ProductLayout from "@/layouts/ProductLayout.astro";
import RelatedProduct from "@/components/user/products/RelatedProduct.astro";
import ProductImage from "@/components/user/products/ProductImage.astro";
import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import { getProductImage } from "@/lib/utils";

const { slug } = Astro.params;

const { data: product } = await Astro.callAction(actions.getProductBySlug, {
  slug: slug ?? "",
});

if (!product) {
  return Astro.redirect("/not-found");
}

const thumbnailUrl = getProductImage(product?.imageUrl ?? "")[0] ?? "";
const productUrl = `/categories/${product?.categorySlug}`;
---

<ProductLayout
  title={product?.name}
  description={product?.description}
  image={thumbnailUrl}
  url={productUrl}
>
  <AppBreadCrumb
    items={[
      { id: 1, name: "Home", url: "/" },
      {
        id: 2,
        name: product?.categoryName,
        url: productUrl,
      },
      { id: 2, name: product?.name },
    ]}
  />
  <section class="container mx-auto px-4 py-8 space-y-8">
    <!-- Product Info Section -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-10 items-start">
      <!-- Left: Product Image -->
      <div class="space-y-4">
        <div class="relative">
          <ProductImage
            src={thumbnailUrl}
            alt={product?.name}
            class="rounded-lg shadow-lg w-full object-cover max-h-[400px] transition-transform duration-300 hover:scale-[1.02]"
          />
          {
            product?.stock === 0 && (
              <span class="absolute top-3 left-3 bg-destructive text-white text-xs font-semibold px-3 py-1 rounded-md">
                Out of Stock
              </span>
            )
          }
        </div>
      </div>

      <!-- Right: Product Details -->
      <div class="space-y-5">
        <h1 class="text-4xl font-heading font-bold text-foreground">
          {product?.name}
        </h1>
        <p class="text-2xl font-extrabold text-primary">
          ${product?.price?.toFixed(2)}
        </p>

        <div>
          {
            product?.stock > 0 ? (
              <span class="text-green-600 font-medium">
                In stock: {product?.stock}
              </span>
            ) : (
              <span class="text-red-600 font-medium">Out of stock</span>
            )
          }
        </div>

        <Button
          size="lg"
          className="w-full md:w-auto mt-4 bg-primary text-primary-foreground hover:bg-primary/90 transition"
        >
          Add to Cart
        </Button>
      </div>
    </div>

    <!-- Description -->
    <div class="mt-8 bg-card rounded-lg shadow p-6">
      <Label className="text-lg font-semibold text-foreground">
        Description
      </Label>
      <p
        class="text-muted-foreground text-sm mt-3 leading-relaxed whitespace-break-spaces"
      >
        {product?.description || "No description available."}
      </p>
    </div>

    <!-- Related Products -->
    <div class="mt-10">
      <RelatedProduct server:defer categorySlug={product?.categorySlug} />
    </div>
  </section>
</ProductLayout>
