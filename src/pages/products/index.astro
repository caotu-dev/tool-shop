---
export const prerender = false;
import ProductLayout from "@/layouts/ProductLayout.astro";
import ProductItem from "@/components/user/products/ProductItem.astro";
import { AppBreadCrumb } from "@/components/admin/layouts/AppBreadcrumb";
import { ProductFilter } from "@/components/user/layouts/ProductFilter";

import { actions } from "astro:actions";

const url = new URL(Astro.request.url);
const minPrice: any = url.searchParams.get("minPrice")
  ? Number(url.searchParams.get("minPrice"))
  : undefined;
const maxPrice: any = url.searchParams.get("maxPrice")
  ? Number(url.searchParams.get("maxPrice"))
  : undefined;
const sortBy = url.searchParams.get("sortBy");
const sortField = url.searchParams.get("sortField");
const keyword = url.searchParams.get("keyword") ?? "";

const products = await Astro.callAction(actions.getListProducts, {
  sortBy: sortBy ?? "",
  sortField: sortField ?? "",
  search: keyword,
  minPrice,
  maxPrice,
});
---

<ProductLayout
  title={"Products"}
  description={"Production pages"}
  image={""}
  url={"/products"}
>
  <AppBreadCrumb
    items={[
      { id: 1, name: "Home", url: "/" },
      {
        id: 2,
        name: "Products",
      },
    ]}
  />

  <ProductFilter client:idle />

  <!-- TODO: move this to a component and use server:defer, do this the same to other page -->
  <div class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4 mt-4">
    {products?.data?.map((item) => <ProductItem item={item} />)}
  </div>
</ProductLayout>
